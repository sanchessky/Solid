Projeto a livraria (open close)
    - Objeto:
        - venda
        - produto
        - cliente
        - funcionario
        - itenvendido
        - pagamento 
        - endereço

       - Desmembrar Objeto:
       - Pessoa: (classe pai)
              + id, nome, cpf, email, telefone, endereco
              classe filha - cliente herda pessoa:
              +  aniversário
              classe filha - Funcionario herda pessoa:
              + cargo, salário
       - Autor herd pessoa:
              + genero_literario
       - Endereco será associado à classe pessoa:
            + tipo_logradouro, logradouro, numero, cep, bairro
       - Produto:
            + id, nome, descricao, preco
       - Venda:
            + id, cliente, funcionario, data_hora
       - itemvendido:
            + id, venda, produto, quantidade
       - Pagamento:
            + id, venda, total_pagar


       Requesitos funcionais:
              - O que podemos fazer com os objetos?
              - Cadastar
              - Atualizar 
              - Pesquisar
              - Listar
              - Apagar


               docker ps -a 
              docker rm -f 



create table cliente(
id int auto_increment primary key,
nome varchar(100) not null,
cpf varchar(15) not null unique,
email varchar (100) not null unique,
telefone varchar(20),
id_endereco int not null,
aniversario date not null);

create table autor(
id int auto_increment primary key,
nome varchar(100) not null,
cpf varchar(15) not null unique,
email varchar (100) not null unique,
telefone varchar(20),
id_endereco int not null,
genero_literario varchar (30) );

create table funcionario(
id int auto_increment primary key,
nome varchar(100) not null,
cpf varchar(15) not null unique,
email varchar (100) not null unique,
telefone varchar(20),
id_endereco int not null,
cargo varchar (50) not null,
salario decimal(7,2) 
);

create table venda(
id int auto_increment primary key,
id_cliente int not null,
id_funcionario int not null,
date_hora datetime default current timestamp()
);


create table itensvendido(
id int auto_increment primary key,
id_venda int not null,
id_produto int not null,
quantidade int not null
);

create table pagamento(
id int auto_increment primary key,
id_venda int not null,
total_pagar decimal(7,2) not null
);

-- criando o relacionamento
ALTER TABLE cliente
ADD CONSTRAINT `fk_cliente_pk_endereco`
FOREIGN KEY (`endereco`)
REFERENCES endereco(`id`);

ALTER TABLE autor
ADD CONSTRAINT `fk_autor_pk_endereco`
FOREIGN KEY autor (`endereco`)
REFERENCES endereco(`id`);

ALTER TABLE funcionario
ADD CONSTRAINT `fk_funcionario_pk_endereco`
FOREIGN KEY funcionario (`endereco`)
REFERENCES endereco(`id`);


thunder
json
{
    
    "nome": "São João",
    "cpf": "123",
    "email": "joãosao@teste.com",
    "telefone": "(11)4002-5622",
    "endereco": {
      "id":1,
      "tipo_logradouro":"Rua",
      "logradouro":"Maresias",
      "numero":"77",
      "complemento":"Casa da frente",
      "cep":"147788",
      "bairro": "Vila Alegre"
    },
    "aniversario": "2002-5-15"
}
json


create database dblivraria;
use dblivraria;

create table produto(
id int auto_increment primary key,
nome varchar(100) not null,
descricao text not null,
preco decimal(6,2) not null
);

create table endereco(
id int auto_increment primary key,
tipo_logradouro enum("Rua","Alameda","Viela","Avenida","Travessa","Praça","Beco"),
logradouro varchar(100) not null,
numero varchar(10) not null,
complemento varchar(100),
cep varchar(10),
bairro varchar(50)
);

create table cliente(
id int auto_increment primary key,
nome varchar(100) not null,
cpf varchar(15) not null unique,
email varchar(100) not null unique,
telefone varchar(20),
id_endereco int not null,
aniversario date not null
);


create table autor(
id int auto_increment primary key,
nome varchar(100) not null,
cpf varchar(15) not null unique,
email varchar(100) not null unique,
telefone varchar(20),
id_endereco int not null,
genero_literario varchar(30)
);



create table funcionario(
id int auto_increment primary key,
nome varchar(100) not null,
cpf varchar(15) not null unique,
email varchar(100) not null unique,
telefone varchar(20),
id_endereco int not null,
cargo varchar(50) not null,
salario decimal(7,2)
);

create table venda(
id int auto_increment primary key,
id_cliente int not null,
id_funcionario int not null,
data_hora datetime default current_timestamp()
);

create table itensvenda(
id int auto_increment primary key,
id_venda int not null,
id_produto int not null,
quantidade int not null
);

create table pagamento(
id int auto_increment primary key,
id_venda int not null,
total_pagar decimal(7,2) not null
);


SELECT produto.nome, produto.foto1, itensvenda.quantidade
FROM produto INNER JOIN itensvenda
ON produto.id = itensvenda.id_produto
ORDER BY itensvenda.quantidade DESC
LIMIT 0,10